/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SmsProviderTwilioInitParameters struct {

	// (String) Sender number which is used to send the SMS.
	// Sender number which is used to send the SMS.
	SenderNumber *string `json:"senderNumber,omitempty" tf:"sender_number,omitempty"`

	// (String) SID used to communicate with Twilio.
	// SID used to communicate with Twilio.
	Sid *string `json:"sid,omitempty" tf:"sid,omitempty"`

	// (String, Sensitive) Token used to communicate with Twilio.
	// Token used to communicate with Twilio.
	TokenSecretRef v1.SecretKeySelector `json:"tokenSecretRef" tf:"-"`
}

type SmsProviderTwilioObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Sender number which is used to send the SMS.
	// Sender number which is used to send the SMS.
	SenderNumber *string `json:"senderNumber,omitempty" tf:"sender_number,omitempty"`

	// (String) SID used to communicate with Twilio.
	// SID used to communicate with Twilio.
	Sid *string `json:"sid,omitempty" tf:"sid,omitempty"`
}

type SmsProviderTwilioParameters struct {

	// (String) Sender number which is used to send the SMS.
	// Sender number which is used to send the SMS.
	// +kubebuilder:validation:Optional
	SenderNumber *string `json:"senderNumber,omitempty" tf:"sender_number,omitempty"`

	// (String) SID used to communicate with Twilio.
	// SID used to communicate with Twilio.
	// +kubebuilder:validation:Optional
	Sid *string `json:"sid,omitempty" tf:"sid,omitempty"`

	// (String, Sensitive) Token used to communicate with Twilio.
	// Token used to communicate with Twilio.
	// +kubebuilder:validation:Optional
	TokenSecretRef v1.SecretKeySelector `json:"tokenSecretRef" tf:"-"`
}

// SmsProviderTwilioSpec defines the desired state of SmsProviderTwilio
type SmsProviderTwilioSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SmsProviderTwilioParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SmsProviderTwilioInitParameters `json:"initProvider,omitempty"`
}

// SmsProviderTwilioStatus defines the observed state of SmsProviderTwilio.
type SmsProviderTwilioStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SmsProviderTwilioObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SmsProviderTwilio is the Schema for the SmsProviderTwilios API. Resource representing the SMS provider Twilio configuration of an instance.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,zitadel}
type SmsProviderTwilio struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.senderNumber) || (has(self.initProvider) && has(self.initProvider.senderNumber))",message="spec.forProvider.senderNumber is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sid) || (has(self.initProvider) && has(self.initProvider.sid))",message="spec.forProvider.sid is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tokenSecretRef)",message="spec.forProvider.tokenSecretRef is a required parameter"
	Spec   SmsProviderTwilioSpec   `json:"spec"`
	Status SmsProviderTwilioStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SmsProviderTwilioList contains a list of SmsProviderTwilios
type SmsProviderTwilioList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SmsProviderTwilio `json:"items"`
}

// Repository type metadata.
var (
	SmsProviderTwilio_Kind             = "SmsProviderTwilio"
	SmsProviderTwilio_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SmsProviderTwilio_Kind}.String()
	SmsProviderTwilio_KindAPIVersion   = SmsProviderTwilio_Kind + "." + CRDGroupVersion.String()
	SmsProviderTwilio_GroupVersionKind = CRDGroupVersion.WithKind(SmsProviderTwilio_Kind)
)

func init() {
	SchemeBuilder.Register(&SmsProviderTwilio{}, &SmsProviderTwilioList{})
}
