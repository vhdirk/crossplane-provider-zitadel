/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultOidcSettingsInitParameters struct {

	// (String) lifetime duration of access tokens
	// lifetime duration of access tokens
	AccessTokenLifetime *string `json:"accessTokenLifetime,omitempty" tf:"access_token_lifetime,omitempty"`

	// (String) lifetime duration of id tokens
	// lifetime duration of id tokens
	IDTokenLifetime *string `json:"idTokenLifetime,omitempty" tf:"id_token_lifetime,omitempty"`

	// (String) expiration duration of refresh tokens
	// expiration duration of refresh tokens
	RefreshTokenExpiration *string `json:"refreshTokenExpiration,omitempty" tf:"refresh_token_expiration,omitempty"`

	// (String) expiration duration of idle refresh tokens
	// expiration duration of idle refresh tokens
	RefreshTokenIdleExpiration *string `json:"refreshTokenIdleExpiration,omitempty" tf:"refresh_token_idle_expiration,omitempty"`
}

type DefaultOidcSettingsObservation struct {

	// (String) lifetime duration of access tokens
	// lifetime duration of access tokens
	AccessTokenLifetime *string `json:"accessTokenLifetime,omitempty" tf:"access_token_lifetime,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) lifetime duration of id tokens
	// lifetime duration of id tokens
	IDTokenLifetime *string `json:"idTokenLifetime,omitempty" tf:"id_token_lifetime,omitempty"`

	// (String) expiration duration of refresh tokens
	// expiration duration of refresh tokens
	RefreshTokenExpiration *string `json:"refreshTokenExpiration,omitempty" tf:"refresh_token_expiration,omitempty"`

	// (String) expiration duration of idle refresh tokens
	// expiration duration of idle refresh tokens
	RefreshTokenIdleExpiration *string `json:"refreshTokenIdleExpiration,omitempty" tf:"refresh_token_idle_expiration,omitempty"`
}

type DefaultOidcSettingsParameters struct {

	// (String) lifetime duration of access tokens
	// lifetime duration of access tokens
	// +kubebuilder:validation:Optional
	AccessTokenLifetime *string `json:"accessTokenLifetime,omitempty" tf:"access_token_lifetime,omitempty"`

	// (String) lifetime duration of id tokens
	// lifetime duration of id tokens
	// +kubebuilder:validation:Optional
	IDTokenLifetime *string `json:"idTokenLifetime,omitempty" tf:"id_token_lifetime,omitempty"`

	// (String) expiration duration of refresh tokens
	// expiration duration of refresh tokens
	// +kubebuilder:validation:Optional
	RefreshTokenExpiration *string `json:"refreshTokenExpiration,omitempty" tf:"refresh_token_expiration,omitempty"`

	// (String) expiration duration of idle refresh tokens
	// expiration duration of idle refresh tokens
	// +kubebuilder:validation:Optional
	RefreshTokenIdleExpiration *string `json:"refreshTokenIdleExpiration,omitempty" tf:"refresh_token_idle_expiration,omitempty"`
}

// DefaultOidcSettingsSpec defines the desired state of DefaultOidcSettings
type DefaultOidcSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DefaultOidcSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DefaultOidcSettingsInitParameters `json:"initProvider,omitempty"`
}

// DefaultOidcSettingsStatus defines the observed state of DefaultOidcSettings.
type DefaultOidcSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DefaultOidcSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DefaultOidcSettings is the Schema for the DefaultOidcSettingss API. Resource representing the default oidc settings.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,zitadel}
type DefaultOidcSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessTokenLifetime) || (has(self.initProvider) && has(self.initProvider.accessTokenLifetime))",message="spec.forProvider.accessTokenLifetime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.idTokenLifetime) || (has(self.initProvider) && has(self.initProvider.idTokenLifetime))",message="spec.forProvider.idTokenLifetime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.refreshTokenExpiration) || (has(self.initProvider) && has(self.initProvider.refreshTokenExpiration))",message="spec.forProvider.refreshTokenExpiration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.refreshTokenIdleExpiration) || (has(self.initProvider) && has(self.initProvider.refreshTokenIdleExpiration))",message="spec.forProvider.refreshTokenIdleExpiration is a required parameter"
	Spec   DefaultOidcSettingsSpec   `json:"spec"`
	Status DefaultOidcSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DefaultOidcSettingsList contains a list of DefaultOidcSettingss
type DefaultOidcSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DefaultOidcSettings `json:"items"`
}

// Repository type metadata.
var (
	DefaultOidcSettings_Kind             = "DefaultOidcSettings"
	DefaultOidcSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DefaultOidcSettings_Kind}.String()
	DefaultOidcSettings_KindAPIVersion   = DefaultOidcSettings_Kind + "." + CRDGroupVersion.String()
	DefaultOidcSettings_GroupVersionKind = CRDGroupVersion.WithKind(DefaultOidcSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&DefaultOidcSettings{}, &DefaultOidcSettingsList{})
}
