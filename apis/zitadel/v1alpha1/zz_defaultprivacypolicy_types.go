/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultPrivacyPolicyInitParameters struct {

	// (String)
	HelpLink *string `json:"helpLink,omitempty" tf:"help_link,omitempty"`

	// (String)
	PrivacyLink *string `json:"privacyLink,omitempty" tf:"privacy_link,omitempty"`

	// (String)
	SupportEmail *string `json:"supportEmail,omitempty" tf:"support_email,omitempty"`

	// (String)
	TosLink *string `json:"tosLink,omitempty" tf:"tos_link,omitempty"`
}

type DefaultPrivacyPolicyObservation struct {

	// (String)
	HelpLink *string `json:"helpLink,omitempty" tf:"help_link,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	PrivacyLink *string `json:"privacyLink,omitempty" tf:"privacy_link,omitempty"`

	// (String)
	SupportEmail *string `json:"supportEmail,omitempty" tf:"support_email,omitempty"`

	// (String)
	TosLink *string `json:"tosLink,omitempty" tf:"tos_link,omitempty"`
}

type DefaultPrivacyPolicyParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	HelpLink *string `json:"helpLink,omitempty" tf:"help_link,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	PrivacyLink *string `json:"privacyLink,omitempty" tf:"privacy_link,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	SupportEmail *string `json:"supportEmail,omitempty" tf:"support_email,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	TosLink *string `json:"tosLink,omitempty" tf:"tos_link,omitempty"`
}

// DefaultPrivacyPolicySpec defines the desired state of DefaultPrivacyPolicy
type DefaultPrivacyPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DefaultPrivacyPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DefaultPrivacyPolicyInitParameters `json:"initProvider,omitempty"`
}

// DefaultPrivacyPolicyStatus defines the observed state of DefaultPrivacyPolicy.
type DefaultPrivacyPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DefaultPrivacyPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DefaultPrivacyPolicy is the Schema for the DefaultPrivacyPolicys API. Resource representing the default privacy policy.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,zitadel}
type DefaultPrivacyPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DefaultPrivacyPolicySpec   `json:"spec"`
	Status            DefaultPrivacyPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DefaultPrivacyPolicyList contains a list of DefaultPrivacyPolicys
type DefaultPrivacyPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DefaultPrivacyPolicy `json:"items"`
}

// Repository type metadata.
var (
	DefaultPrivacyPolicy_Kind             = "DefaultPrivacyPolicy"
	DefaultPrivacyPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DefaultPrivacyPolicy_Kind}.String()
	DefaultPrivacyPolicy_KindAPIVersion   = DefaultPrivacyPolicy_Kind + "." + CRDGroupVersion.String()
	DefaultPrivacyPolicy_GroupVersionKind = CRDGroupVersion.WithKind(DefaultPrivacyPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&DefaultPrivacyPolicy{}, &DefaultPrivacyPolicyList{})
}
