name: zitadel/zitadel
resources:
    zitadel_action:
        subCategory: ""
        description: Resource representing an action belonging to an organization.
        name: zitadel_action
        title: zitadel_action Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "allowed_to_fail": true,
                  "name": "actionname",
                  "org_id": "${data.zitadel_org.default.id}",
                  "script": "testscript",
                  "timeout": "10s"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            allowed_to_fail: (Boolean) when true, the next action will be called even if this action fails
            id: (String) The ID of this resource.
            name: (String)
            org_id: (String) ID of the organization
            script: (String)
            state: (Number) the state of the action
            timeout: (String) after which time the action will be terminated if not finished
        importStatements: []
    zitadel_application_api:
        subCategory: ""
        description: Resource representing an API application belonging to a project, with all configuration possibilities.
        name: zitadel_application_api
        title: zitadel_application_api Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auth_method_type": "API_AUTH_METHOD_TYPE_BASIC",
                  "name": "applicationapi",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            auth_method_type: '(String) Auth method type, supported values: API_AUTH_METHOD_TYPE_BASIC, API_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT'
            client_id: (String, Sensitive) generated ID for this config
            client_secret: (String, Sensitive) generated secret for this config
            id: (String) The ID of this resource.
            name: (String) Name of the application
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
        importStatements: []
    zitadel_application_key:
        subCategory: ""
        description: Resource representing a app key
        name: zitadel_application_key
        title: zitadel_application_key Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "app_id": "${data.zitadel_application_api.default.id}",
                  "expiration_date": "2519-04-01T08:45:00Z",
                  "key_type": "KEY_TYPE_JSON",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}"
                }
              references:
                app_id: data.zitadel_application_api.default.id
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            app_id: (String) ID of the application
            expiration_date: (String) Expiration date of the app key in the RFC3339 format
            id: (String) The ID of this resource.
            key_details: (String, Sensitive) Value of the app key
            key_type: '(String) Type of the app key, supported values: KEY_TYPE_UNSPECIFIED, KEY_TYPE_JSON'
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
        importStatements: []
    zitadel_application_oidc:
        subCategory: ""
        description: Resource representing an OIDC application belonging to a project, with all configuration possibilities.
        name: zitadel_application_oidc
        title: zitadel_application_oidc Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "access_token_role_assertion": false,
                  "access_token_type": "OIDC_TOKEN_TYPE_BEARER",
                  "additional_origins": [],
                  "app_type": "OIDC_APP_TYPE_WEB",
                  "auth_method_type": "OIDC_AUTH_METHOD_TYPE_BASIC",
                  "clock_skew": "0s",
                  "dev_mode": true,
                  "grant_types": [
                    "OIDC_GRANT_TYPE_AUTHORIZATION_CODE"
                  ],
                  "id_token_role_assertion": false,
                  "id_token_userinfo_assertion": false,
                  "name": "applicationoidc",
                  "org_id": "${data.zitadel_org.default.id}",
                  "post_logout_redirect_uris": [
                    "https://localhost.com"
                  ],
                  "project_id": "${data.zitadel_project.default.id}",
                  "redirect_uris": [
                    "https://localhost.com"
                  ],
                  "response_types": [
                    "OIDC_RESPONSE_TYPE_CODE"
                  ],
                  "skip_native_app_success_page": false,
                  "version": "OIDC_VERSION_1_0"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            access_token_role_assertion: (Boolean) Access token role assertion
            access_token_type: '(String) Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT'
            additional_origins: (List of String) Additional origins
            app_type: '(String) App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE'
            auth_method_type: '(String) Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT'
            client_id: (String, Sensitive) generated ID for this config
            client_secret: (String, Sensitive) generated secret for this config
            clock_skew: (String) Clockskew
            dev_mode: (Boolean) Dev mode
            grant_types: '(List of String) Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE, OIDC_GRANT_TYPE_TOKEN_EXCHANGE'
            id: (String) The ID of this resource.
            id_token_role_assertion: (Boolean) ID token role assertion
            id_token_userinfo_assertion: (Boolean) Token userinfo assertion
            name: (String) Name of the application
            org_id: (String) ID of the organization
            post_logout_redirect_uris: (List of String) Post logout redirect URIs
            project_id: (String) ID of the project
            redirect_uris: (List of String) RedirectURIs
            response_types: '(List of String) Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN'
            skip_native_app_success_page: (Boolean) Skip the successful login page on native apps and directly redirect the user to the callback.
            version: '(String) Version, supported values: OIDC_VERSION_1_0'
        importStatements: []
    zitadel_application_saml:
        subCategory: ""
        description: Resource representing a SAML application belonging to a project, with all configuration possibilities.
        name: zitadel_application_saml
        title: zitadel_application_saml Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "metadata_xml": "\u003c?xml version=\"1.0\"?\u003e\n\u003cmd:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\"\n                     validUntil=\"2024-01-26T17:48:38Z\"\n                     cacheDuration=\"PT604800S\"\n                     entityID=\"http://example.com/saml/metadata\"\u003e\n    \u003cmd:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"false\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\u003e\n        \u003cmd:NameIDFormat\u003eurn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\u003c/md:NameIDFormat\u003e\n        \u003cmd:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\n                                     Location=\"http://example.com/saml/cas\"\n                                     index=\"1\" /\u003e\n        \n    \u003c/md:SPSSODescriptor\u003e\n\u003c/md:EntityDescriptor\u003e",
                  "name": "applicationapi",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            metadata_xml: (String, Sensitive) Metadata as XML file
            name: (String) Name of the application
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
        importStatements: []
    zitadel_default_domain_claimed_message_text:
        subCategory: ""
        name: zitadel_default_domain_claimed_message_text
        title: zitadel_default_domain_claimed_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_domain_policy:
        subCategory: ""
        description: Resource representing the default domain policy.
        name: zitadel_default_domain_policy
        title: zitadel_default_domain_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "smtp_sender_address_matches_instance_domain": true,
                  "user_login_must_be_domain": false,
                  "validate_org_domains": true
                }
        argumentDocs:
            id: (String) The ID of this resource.
            smtp_sender_address_matches_instance_domain: (Boolean)
            user_login_must_be_domain: (Boolean) User login must be domain
            validate_org_domains: (Boolean) Validate organization domains
        importStatements: []
    zitadel_default_init_message_text:
        subCategory: ""
        name: zitadel_default_init_message_text
        title: zitadel_default_init_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_label_policy:
        subCategory: ""
        description: Resource representing the default label policy.
        name: zitadel_default_label_policy
        title: zitadel_default_label_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "background_color": "#fafafa",
                  "background_color_dark": "#111827",
                  "disable_watermark": false,
                  "font_color": "#000000",
                  "font_color_dark": "#ffffff",
                  "font_hash": "${filemd5(\"/path/to/font.tff\")}",
                  "font_path": "/path/to/font.tff",
                  "hide_login_name_suffix": true,
                  "icon_dark_hash": "${filemd5(\"/path/to/icon_dark.jpg\")}",
                  "icon_dark_path": "/path/to/icon_dark.jpg",
                  "icon_hash": "${filemd5(\"/path/to/icon.jpg\")}",
                  "icon_path": "/path/to/icon.jpg",
                  "logo_dark_hash": "${filemd5(\"/path/to/logo_dark.jpg\")}",
                  "logo_dark_path": "/path/to/logo_dark.jpg",
                  "logo_hash": "${filemd5(\"/path/to/logo.jpg\")}",
                  "logo_path": "/path/to/logo.jpg",
                  "primary_color": "#5469d4",
                  "primary_color_dark": "#a5b4fc",
                  "set_active": true,
                  "theme_mode": "THEME_MODE_DARK",
                  "warn_color": "#cd3d56",
                  "warn_color_dark": "#ff3b5b"
                }
        argumentDocs:
            background_color: (String) hex value for background color
            background_color_dark: (String) hex value for background color dark theme
            disable_watermark: (Boolean) disable watermark
            font_color: (String) hex value for font color
            font_color_dark: (String) hex value for font color dark theme
            font_hash: (String)
            font_path: (String)
            font_url: (String)
            hide_login_name_suffix: (Boolean) hides the org suffix on the login form if the scope "urn:zitadel:iam:org:domain:primary:{domainname}" is set. Details about this scope in https://zitadel.ch/docs/concepts#Reserved_Scopes
            icon_dark_hash: (String)
            icon_dark_path: (String)
            icon_hash: (String)
            icon_path: (String)
            icon_url: (String)
            icon_url_dark: (String)
            id: (String) The ID of this resource.
            logo_dark_hash: (String)
            logo_dark_path: (String)
            logo_hash: (String)
            logo_path: (String)
            logo_url: (String)
            logo_url_dark: (String)
            primary_color: (String) hex value for primary color
            primary_color_dark: (String) hex value for primary color dark theme
            set_active: (Boolean) set the label policy active after creating/updating
            theme_mode: '(String) theme mode, supported values: THEME_MODE_UNSPECIFIED, THEME_MODE_AUTO, THEME_MODE_DARK, THEME_MODE_LIGHT'
            warn_color: (String) hex value for warn color
            warn_color_dark: (String) hex value for warn color dark theme
        importStatements: []
    zitadel_default_lockout_policy:
        subCategory: ""
        description: Resource representing the default lockout policy.
        name: zitadel_default_lockout_policy
        title: zitadel_default_lockout_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "max_password_attempts": "5"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            max_password_attempts: (Number) Maximum password check attempts before the account gets locked. Attempts are reset as soon as the password is entered correctly or the password is reset.
        importStatements: []
    zitadel_default_login_policy:
        subCategory: ""
        description: Resource representing the default login policy.
        name: zitadel_default_login_policy
        title: zitadel_default_login_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "allow_domain_discovery": true,
                  "allow_external_idp": true,
                  "allow_register": true,
                  "default_redirect_uri": "localhost:8080",
                  "disable_login_with_email": true,
                  "disable_login_with_phone": true,
                  "external_login_check_lifetime": "240h0m0s",
                  "force_mfa": false,
                  "force_mfa_local_only": false,
                  "hide_password_reset": "false",
                  "idps": [
                    "${data.zitadel_idp_google.default.id}",
                    "${data.zitadel_idp_azure_ad.default.id}"
                  ],
                  "ignore_unknown_usernames": true,
                  "mfa_init_skip_lifetime": "720h0m0s",
                  "multi_factor_check_lifetime": "24h0m0s",
                  "multi_factors": [
                    "MULTI_FACTOR_TYPE_U2F_WITH_VERIFICATION"
                  ],
                  "password_check_lifetime": "240h0m0s",
                  "passwordless_type": "PASSWORDLESS_TYPE_ALLOWED",
                  "second_factor_check_lifetime": "24h0m0s",
                  "second_factors": [
                    "SECOND_FACTOR_TYPE_OTP",
                    "SECOND_FACTOR_TYPE_U2F"
                  ],
                  "user_login": true
                }
              references:
                idps: data.zitadel_idp_google.default.id
        argumentDocs:
            allow_domain_discovery: (Boolean) if set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organisation on success.
            allow_external_idp: (Boolean) defines if a user is allowed to add a defined identity provider. E.g. Google auth
            allow_register: (Boolean) defines if a person is allowed to register a user on this organisation
            default_redirect_uri: (String) defines where the user will be redirected to if the login is started without app context (e.g. from mail)
            disable_login_with_email: (Boolean) defines if user can additionally (to the loginname) be identified by their verified email address
            disable_login_with_phone: (Boolean) defines if user can additionally (to the loginname) be identified by their verified phone number
            external_login_check_lifetime: (String)
            force_mfa: (Boolean) defines if a user MUST use a multi factor to log in
            force_mfa_local_only: (Boolean) if activated, ZITADEL only enforces MFA on local authentications. On authentications through MFA, ZITADEL won't prompt for MFA.
            hide_password_reset: (Boolean) defines if password reset link should be shown in the login screen
            id: (String) The ID of this resource.
            idps: (Set of String) allowed idps to login or register
            ignore_unknown_usernames: (Boolean) defines if unknown username on login screen directly return an error or always display the password screen
            mfa_init_skip_lifetime: (String)
            multi_factor_check_lifetime: (String)
            multi_factors: (Set of String) allowed multi factors
            password_check_lifetime: (String)
            passwordless_type: (String) defines if passwordless is allowed for users
            second_factor_check_lifetime: (String)
            second_factors: (Set of String) allowed second factors
            user_login: (Boolean) defines if a user is allowed to login with his username and password
        importStatements: []
    zitadel_default_login_texts:
        subCategory: ""
        name: zitadel_default_login_texts
        title: zitadel_default_login_texts Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "email_verification_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "login_button_text": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "email_verification_text": {
                    "code_label": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "external_registration_user_overview_text": {
                    "back_button_text": "example",
                    "description": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "language_label": "example",
                    "lastname_label": "example",
                    "next_button_text": "example",
                    "nickname_label": "example",
                    "phone_label": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "external_user_not_found_text": {
                    "auto_register_button_text": "example",
                    "description": "example",
                    "link_button_text": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example"
                  },
                  "footer_text": {
                    "help": "example",
                    "privacy_policy": "example",
                    "tos": "example"
                  },
                  "init_mfa_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "init_mfa_otp_text": {
                    "cancel_button_text": "example",
                    "code_label": "example",
                    "description": "example",
                    "description_otp": "example",
                    "next_button_text": "example",
                    "secret_label": "example",
                    "title": "example"
                  },
                  "init_mfa_prompt_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "otp_option": "example",
                    "skip_button_text": "example",
                    "title": "example",
                    "u2f_option": "example"
                  },
                  "init_mfa_u2f_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "register_token_button_text": "example",
                    "title": "example",
                    "token_name_label": "example"
                  },
                  "init_password_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "init_password_text": {
                    "code_label": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "initialize_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "initialize_user_text": {
                    "code_label": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "language": "en",
                  "linking_user_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "login_text": {
                    "description": "example",
                    "description_linking_process": "example",
                    "external_user_description": "example",
                    "login_name_label": "example",
                    "login_name_placeholder": "example",
                    "next_button_text": "example",
                    "register_button_text": "example",
                    "title": "example",
                    "title_linking_process": "example",
                    "user_must_be_member_of_org": "example",
                    "user_name_placeholder": "example"
                  },
                  "logout_text": {
                    "description": "example",
                    "login_button_text": "example",
                    "title": "example"
                  },
                  "mfa_providers_text": {
                    "choose_other": "example",
                    "otp": "example",
                    "u2f": "example"
                  },
                  "password_change_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "password_change_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "old_password_label": "example",
                    "title": "example"
                  },
                  "password_reset_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "password_text": {
                    "back_button_text": "example",
                    "confirmation": "example",
                    "description": "example",
                    "has_lowercase": "example",
                    "has_number": "example",
                    "has_symbol": "example",
                    "has_uppercase": "example",
                    "min_length": "example",
                    "next_button_text": "example",
                    "password_label": "example",
                    "reset_link_text": "example",
                    "title": "example"
                  },
                  "passwordless_prompt_text": {
                    "description": "example",
                    "description_init": "example",
                    "next_button_text": "example",
                    "passwordless_button_text": "example",
                    "skip_button_text": "example",
                    "title": "example"
                  },
                  "passwordless_registration_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "description_close": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "passwordless_registration_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "register_token_button_text": "example",
                    "title": "example",
                    "token_name_label": "example"
                  },
                  "passwordless_text": {
                    "description": "example",
                    "error_retry": "example",
                    "login_with_pw_button_text": "example",
                    "not_supported": "example",
                    "title": "example",
                    "validate_token_button_text": "example"
                  },
                  "registration_option_text": {
                    "description": "example",
                    "external_login_description": "example",
                    "title": "example",
                    "user_name_button_text": "example"
                  },
                  "registration_org_text": {
                    "description": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "lastname_label": "example",
                    "orgname_label": "example",
                    "password_confirm_label": "example",
                    "password_label": "example",
                    "privacy_link_text": "example",
                    "save_button_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "registration_user_text": {
                    "back_button_text": "example",
                    "description": "example",
                    "description_org_register": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "gender_label": "example",
                    "language_label": "example",
                    "lastname_label": "example",
                    "next_button_text": "example",
                    "password_confirm_label": "example",
                    "password_label": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "select_account_text": {
                    "description": "example",
                    "description_linking_process": "example",
                    "other_user": "example",
                    "session_state_active": "example",
                    "session_state_inactive": "example",
                    "title": "example",
                    "title_linking_process": "example",
                    "user_must_be_member_of_org": "example"
                  },
                  "success_login_text": {
                    "auto_redirect_description": "example",
                    "next_button_text": "example",
                    "redirected_description": "example",
                    "title": "example"
                  },
                  "username_change_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "username_change_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example",
                    "username_label": "example"
                  },
                  "verify_mfa_otp_text": {
                    "code_label": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "verify_mfa_u2f_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "title": "example",
                    "validate_token_text": "example"
                  }
                }
        argumentDocs:
            auto_redirect_description: (String) Text to describe that auto-redirect should happen after successful login
            auto_register_button_text: (String)
            back_button_text: (String)
            cancel_button_text: (String)
            choose_other: (String)
            code_label: (String)
            confirmation: (String)
            description: (String)
            description_close: (String)
            description_init: (String)
            description_linking_process: (String)
            description_org_register: (String)
            description_otp: (String)
            email_label: (String)
            email_verification_done_text: (Attributes) (see below for nested schema)
            email_verification_text: (Attributes) (see below for nested schema)
            error_retry: (String)
            expired_description: (String)
            external_login_description: (String)
            external_registration_user_overview_text: (Attributes) (see below for nested schema)
            external_user_description: (String)
            external_user_not_found_text: (Attributes) (see below for nested schema)
            firstname_label: (String)
            footer_text: (Attributes) (see below for nested schema)
            gender_label: (String)
            has_lowercase: (String)
            has_number: (String)
            has_symbol: (String)
            has_uppercase: (String)
            help: (String)
            id: (String) The ID of this resource.
            init_mfa_done_text: (Attributes) (see below for nested schema)
            init_mfa_otp_text: (Attributes) (see below for nested schema)
            init_mfa_prompt_text: (Attributes) (see below for nested schema)
            init_mfa_u2f_text: (Attributes) (see below for nested schema)
            init_password_done_text: (Attributes) (see below for nested schema)
            init_password_text: (Attributes) (see below for nested schema)
            initialize_done_text: (Attributes) (see below for nested schema)
            initialize_user_text: (Attributes) (see below for nested schema)
            language: (String)
            language_label: (String)
            lastname_label: (String)
            link_button_text: (String)
            linking_user_done_text: (Attributes) (see below for nested schema)
            linking_user_prompt_text: (Attributes) (see below for nested schema)
            login_button_text: (String)
            login_name_label: (String)
            login_name_placeholder: (String)
            login_text: (Attributes) (see below for nested schema)
            login_with_pw_button_text: (String)
            logout_text: (Attributes) (see below for nested schema)
            mfa_providers_text: (Attributes) (see below for nested schema)
            min_length: (String)
            new_password_confirm_label: (String)
            new_password_label: (String)
            next_button_text: (String)
            nickname_label: (String)
            not_supported: (String)
            old_password_label: (String)
            orgname_label: (String)
            other_button_text: (String)
            other_user: (String)
            otp: (String)
            otp_option: (String)
            password_change_done_text: (Attributes) (see below for nested schema)
            password_change_text: (Attributes) (see below for nested schema)
            password_confirm_label: (String)
            password_label: (String)
            password_reset_done_text: (Attributes) (see below for nested schema)
            password_text: (Attributes) (see below for nested schema)
            passwordless_button_text: (String)
            passwordless_prompt_text: (Attributes) (see below for nested schema)
            passwordless_registration_done_text: (Attributes) (see below for nested schema)
            passwordless_registration_text: (Attributes) (see below for nested schema)
            passwordless_text: (Attributes) (see below for nested schema)
            phone_label: (String)
            privacy_confirm: (String)
            privacy_link_text: (String)
            privacy_policy: (String)
            redirected_description: (String) Text to describe that the window can be closed after redirect
            register_button_text: (String)
            register_token_button_text: (String)
            registration_option_text: (Attributes) (see below for nested schema)
            registration_org_text: (Attributes) (see below for nested schema)
            registration_user_text: (Attributes) (see below for nested schema)
            resend_button_text: (String)
            reset_link_text: (String)
            save_button_text: (String)
            secret_label: (String)
            select_account_text: (Attributes) (see below for nested schema)
            session_state_active: (String)
            session_state_inactive: (String)
            skip_button_text: (String)
            success_login_text: (Attributes) (see below for nested schema)
            support_email: (String)
            title: (String)
            title_linking_process: (String)
            token_name_label: (String)
            tos: (String)
            tos_and_privacy_label: (String)
            tos_confirm: (String)
            tos_link_text: (String)
            u2f: (String)
            u2f_option: (String)
            user_must_be_member_of_org: (String)
            user_name_button_text: (String)
            user_name_placeholder: (String)
            username_change_done_text: (Attributes) (see below for nested schema)
            username_change_text: (Attributes) (see below for nested schema)
            username_label: (String)
            validate_token_button_text: (String)
            validate_token_text: (String)
            verify_mfa_otp_text: (Attributes) (see below for nested schema)
            verify_mfa_u2f_text: (Attributes) (see below for nested schema)
        importStatements: []
    zitadel_default_notification_policy:
        subCategory: ""
        description: Resource representing the default notification policy.
        name: zitadel_default_notification_policy
        title: zitadel_default_notification_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "password_change": false
                }
        argumentDocs:
            id: (String) The ID of this resource.
            password_change: (Boolean) Send notification if a user changes his password
        importStatements: []
    zitadel_default_oidc_settings:
        subCategory: ""
        description: Resource representing the default oidc settings.
        name: zitadel_default_oidc_settings
        title: zitadel_default_oidc_settings Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "access_token_lifetime": "12h0m0s",
                  "id_token_lifetime": "12h0m0s",
                  "refresh_token_expiration": "720h0m0s",
                  "refresh_token_idle_expiration": "2160h0m0s"
                }
        argumentDocs:
            access_token_lifetime: (String) lifetime duration of access tokens
            id: (String) The ID of this resource.
            id_token_lifetime: (String) lifetime duration of id tokens
            refresh_token_expiration: (String) expiration duration of refresh tokens
            refresh_token_idle_expiration: (String) expiration duration of idle refresh tokens
        importStatements: []
    zitadel_default_password_change_message_text:
        subCategory: ""
        name: zitadel_default_password_change_message_text
        title: zitadel_default_password_change_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_password_complexity_policy:
        subCategory: ""
        description: Resource representing the default password complexity policy.
        name: zitadel_default_password_complexity_policy
        title: zitadel_default_password_complexity_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "has_lowercase": true,
                  "has_number": true,
                  "has_symbol": true,
                  "has_uppercase": true,
                  "min_length": "8"
                }
        argumentDocs:
            has_lowercase: (Boolean) defines if the password MUST contain a lower case letter
            has_number: (Boolean) defines if the password MUST contain a number
            has_symbol: (Boolean) defines if the password MUST contain a symbol. E.g. "$"
            has_uppercase: (Boolean) defines if the password MUST contain an upper case letter
            id: (String) The ID of this resource.
            min_length: (Number) Minimal length for the password
        importStatements: []
    zitadel_default_password_reset_message_text:
        subCategory: ""
        name: zitadel_default_password_reset_message_text
        title: zitadel_default_password_reset_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_passwordless_registration_message_text:
        subCategory: ""
        name: zitadel_default_passwordless_registration_message_text
        title: zitadel_default_passwordless_registration_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_privacy_policy:
        subCategory: ""
        description: Resource representing the default privacy policy.
        name: zitadel_default_privacy_policy
        title: zitadel_default_privacy_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "help_link": "https://example.com/help",
                  "privacy_link": "https://example.com/privacy",
                  "support_email": "support@example.com",
                  "tos_link": "https://example.com/tos"
                }
        argumentDocs:
            help_link: (String)
            id: (String) The ID of this resource.
            privacy_link: (String)
            support_email: (String)
            tos_link: (String)
        importStatements: []
    zitadel_default_verify_email_message_text:
        subCategory: ""
        name: zitadel_default_verify_email_message_text
        title: zitadel_default_verify_email_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_verify_email_otp_message_text:
        subCategory: ""
        name: zitadel_default_verify_email_otp_message_text
        title: zitadel_default_verify_email_otp_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_verify_phone_message_text:
        subCategory: ""
        name: zitadel_default_verify_phone_message_text
        title: zitadel_default_verify_phone_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "language": "en",
                  "text": "text example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_default_verify_sms_otp_message_text:
        subCategory: ""
        name: zitadel_default_verify_sms_otp_message_text
        title: zitadel_default_verify_sms_otp_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "language": "en",
                  "text": "text example"
                }
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_domain:
        subCategory: ""
        description: Resource representing a domain of the organization.
        name: zitadel_domain
        title: zitadel_domain Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "is_primary": false,
                  "name": "zitadel.default.127.0.0.1.sslip.io",
                  "org_id": "${data.zitadel_org.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            is_primary: (Boolean) Is domain primary
            is_verified: (Boolean) Is domain verified
            name: (String) Name of the domain
            org_id: (String) ID of the organization
            validation_type: (Number) Validation type
        importStatements: []
    zitadel_domain_claimed_message_text:
        subCategory: ""
        name: zitadel_domain_claimed_message_text
        title: zitadel_domain_claimed_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_domain_policy:
        subCategory: ""
        description: Resource representing the custom domain policy of an organization.
        name: zitadel_domain_policy
        title: zitadel_domain_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "org_id": "${data.zitadel_org.default.id}",
                  "smtp_sender_address_matches_instance_domain": true,
                  "user_login_must_be_domain": false,
                  "validate_org_domains": true
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            smtp_sender_address_matches_instance_domain: (Boolean)
            user_login_must_be_domain: (Boolean) User login must be domain
            validate_org_domains: (Boolean) Validate organization domains
        importStatements: []
    zitadel_human_user:
        subCategory: ""
        description: Resource representing a human user situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        name: zitadel_human_user
        title: zitadel_human_user Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "display_name": "displayname",
                  "email": "test@zitadel.com",
                  "first_name": "firstname",
                  "gender": "GENDER_MALE",
                  "initial_password": "Password1!",
                  "is_email_verified": true,
                  "is_phone_verified": true,
                  "last_name": "lastname",
                  "nick_name": "nickname",
                  "org_id": "${data.zitadel_org.default.id}",
                  "phone": "+41799999999",
                  "preferred_language": "de",
                  "user_name": "humanfull@localhost.com"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            display_name: (String) Display name of the user
            email: (String) Email of the user
            first_name: (String) First name of the user
            gender: '(String) Gender of the user, supported values: GENDER_UNSPECIFIED, GENDER_FEMALE, GENDER_MALE, GENDER_DIVERSE'
            id: (String) The ID of this resource.
            initial_password: (String, Sensitive) Initially set password for the user, not changeable after creation
            is_email_verified: (Boolean) Is the email verified of the user, can only be true if password of the user is set
            is_phone_verified: (Boolean) Is the phone verified of the user
            last_name: (String) Last name of the user
            login_names: (List of String) Loginnames
            nick_name: (String) Nick name of the user
            org_id: (String) ID of the organization
            phone: (String) Phone of the user
            preferred_language: (String) Preferred language of the user
            preferred_login_name: (String) Preferred login name
            state: (String) State of the user
            user_name: (String) Username
        importStatements: []
    zitadel_idp_azure_ad:
        subCategory: ""
        description: Resource representing an Azure AD IDP on the instance.
        name: zitadel_idp_azure_ad
        title: zitadel_idp_azure_ad Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "9065bfc8-a08a...",
                  "client_secret": "H2n***",
                  "email_verified": true,
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "Azure AD",
                  "scopes": [
                    "openid",
                    "profile",
                    "email",
                    "User.Read"
                  ],
                  "tenant_type": "AZURE_AD_TENANT_TYPE_ORGANISATIONS"
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            email_verified: (Boolean) automatically mark emails as verified
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            tenant_id: (String) if tenant_id is not set, the tenant_type is used
            tenant_type: (String) the azure ad tenant type
        importStatements: []
    zitadel_idp_github:
        subCategory: ""
        description: Resource representing a GitHub IDP on the instance.
        name: zitadel_idp_github
        title: zitadel_idp_github Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "86a165...",
                  "client_secret": "*****afdbac18",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitHub",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_idp_github_es:
        subCategory: ""
        description: Resource representing a GitHub Enterprise IDP on the instance.
        name: zitadel_idp_github_es
        title: zitadel_idp_github_es Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "authorization_endpoint": "https://auth.endpoint",
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "86a165...",
                  "client_secret": "*****afdbac18",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitHub Enterprise Server",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ],
                  "token_endpoint": "https://token.endpoint",
                  "user_endpoint": "https://user.endpoint"
                }
        argumentDocs:
            authorization_endpoint: (String) the providers authorization endpoint
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            token_endpoint: (String) the providers token endpoint
            user_endpoint: (String) the providers user endpoint
        importStatements: []
    zitadel_idp_gitlab:
        subCategory: ""
        description: Resource representing a GitLab IDP on the instance.
        name: zitadel_idp_gitlab
        title: zitadel_idp_gitlab Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitLab",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_idp_gitlab_self_hosted:
        subCategory: ""
        description: Resource representing a GitLab Self Hosted IDP on the instance.
        name: zitadel_idp_gitlab_self_hosted
        title: zitadel_idp_gitlab_self_hosted Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "issuer": "https://my.issuer",
                  "name": "GitLab Self Hosted",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            issuer: (String) the providers issuer
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_idp_google:
        subCategory: ""
        description: Resource representing a Google IDP on the instance.
        name: zitadel_idp_google
        title: zitadel_idp_google Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "182902...",
                  "client_secret": "GOCSPX-*****",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "Google",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_idp_ldap:
        subCategory: ""
        description: Resource representing an LDAP IDP on the instance.
        name: zitadel_idp_ldap
        title: zitadel_idp_ldap Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "base_dn": "dc=example,dc=com",
                  "bind_dn": "cn=admin,dc=example,dc=com",
                  "bind_password": "Password1!",
                  "first_name_attribute": "firstname",
                  "id_attribute": "uid",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "last_name_attribute": "lastname",
                  "name": "LDAP",
                  "servers": [
                    "ldaps://my.primary.server:389",
                    "ldaps://my.secondary.server:389"
                  ],
                  "start_tls": false,
                  "timeout": "10s",
                  "user_base": "dn",
                  "user_filters": [
                    "uid",
                    "email"
                  ],
                  "user_object_classes": [
                    "inetOrgPerson"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            avatar_url_attribute: (String) User attribute for the avatar url
            base_dn: (String) Base DN for LDAP connections
            bind_dn: (String) Bind DN for LDAP connections
            bind_password: (String, Sensitive) Bind password for LDAP connections
            display_name_attribute: (String) User attribute for the display name
            email_attribute: (String) User attribute for the email
            email_verified_attribute: (String) User attribute for the email verified state
            first_name_attribute: (String) User attribute for the first name
            id: (String) The ID of this resource.
            id_attribute: (String) User attribute for the id
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            last_name_attribute: (String) User attribute for the last name
            name: (String) Name of the IDP
            nick_name_attribute: (String) User attribute for the nick name
            phone_attribute: (String) User attribute for the phone
            phone_verified_attribute: (String) User attribute for the phone verified state
            preferred_language_attribute: (String) User attribute for the preferred language
            preferred_username_attribute: (String) User attribute for the preferred username
            profile_attribute: (String) User attribute for the profile
            servers: (List of String) Servers to try in order for establishing LDAP connections
            start_tls: (Boolean) Wether to use StartTLS for LDAP connections
            timeout: (String) Timeout for LDAP connections
            user_base: (String) User base for LDAP connections
            user_filters: (Set of String) User filters for LDAP connections
            user_object_classes: (Set of String) User object classes for LDAP connections
        importStatements: []
    zitadel_idp_oauth:
        subCategory: ""
        description: Resource representing a generic OAuth2 IDP on the instance.
        name: zitadel_idp_oauth
        title: zitadel_idp_oauth Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "authorization_endpoint": "https://accounts.google.com/o/oauth2/v2/auth",
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "id_attribute": "user_id",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitLab",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ],
                  "token_endpoint": "https://oauth2.googleapis.com/token",
                  "user_endpoint": "https://openidconnect.googleapis.com/v1/userinfo"
                }
        argumentDocs:
            authorization_endpoint: (String) The authorization endpoint
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            id_attribute: (String) The id attribute
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            token_endpoint: (String) The token endpoint
            user_endpoint: (String) The user endpoint
        importStatements: []
    zitadel_idp_oidc:
        subCategory: ""
        description: Resource representing a generic OIDC IDP on the instance.
        name: zitadel_idp_oidc
        title: zitadel_idp_oidc Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "a_client_id",
                  "client_secret": "a_client_secret",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_id_token_mapping": true,
                  "is_linking_allowed": false,
                  "issuer": "https://example.com",
                  "name": "My Generic OIDC IDP",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_id_token_mapping: (Boolean) if true, provider information get mapped from the id token, not from the userinfo endpoint
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            issuer: (String) the issuer of the idp
            name: (String) Name of the IDP
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_idp_saml:
        subCategory: ""
        description: Resource representing a SAML IDP on the instance.
        name: zitadel_idp_saml
        title: zitadel_idp_saml Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "binding": "SAML_BINDING_POST",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "metadata_xml": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?\u003e\n\u003cmd:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://saml.example.com/entityid\" validUntil=\"2034-05-15T14:21:58.979Z\"\u003e\n  \u003cmd:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\u003e\n    \u003cmd:KeyDescriptor use=\"signing\"\u003e\n      \u003cds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"\u003e\n        \u003cds:X509Data\u003e\n          \u003cds:X509Certificate\u003eMIIC4jCCAcoCCQC33wnybT5QZDANBgkqhkiG9w0BAQsFADAyMQswCQYDVQQGEwJV\nSzEPMA0GA1UECgwGQm94eUhRMRIwEAYDVQQDDAlNb2NrIFNBTUwwIBcNMjIwMjI4\nMjE0NjM4WhgPMzAyMTA3MDEyMTQ2MzhaMDIxCzAJBgNVBAYTAlVLMQ8wDQYDVQQK\nDAZCb3h5SFExEjAQBgNVBAMMCU1vY2sgU0FNTDCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBALGfYettMsct1T6tVUwTudNJH5Pnb9GGnkXi9Zw/e6x45DD0\nRuRONbFlJ2T4RjAE/uG+AjXxXQ8o2SZfb9+GgmCHuTJFNgHoZ1nFVXCmb/Hg8Hpd\n4vOAGXndixaReOiq3EH5XvpMjMkJ3+8+9VYMzMZOjkgQtAqO36eAFFfNKX7dTj3V\npwLkvz6/KFCq8OAwY+AUi4eZm5J57D31GzjHwfjH9WTeX0MyndmnNB1qV75qQR3b\n2/W5sGHRv+9AarggJkF+ptUkXoLtVA51wcfYm6hILptpde5FQC8RWY1YrswBWAEZ\nNfyrR4JeSweElNHg4NVOs4TwGjOPwWGqzTfgTlECAwEAATANBgkqhkiG9w0BAQsF\nAAOCAQEAAYRlYflSXAWoZpFfwNiCQVE5d9zZ0DPzNdWhAybXcTyMf0z5mDf6FWBW\n5Gyoi9u3EMEDnzLcJNkwJAAc39Apa4I2/tml+Jy29dk8bTyX6m93ngmCgdLh5Za4\nkhuU3AM3L63g7VexCuO7kwkjh/+LqdcIXsVGO6XDfu2QOs1Xpe9zIzLpwm/RNYeX\nUjbSj5ce/jekpAw7qyVVL4xOyh8AtUW1ek3wIw1MJvEgEPt0d16oshWJpoS1OT8L\nr/22SvYEo3EmSGdTVGgk3x3s+A0qWAqTcyjr7Q4s/GKYRFfomGwz0TZ4Iw1ZN99M\nm0eo2USlSRTVl7QHRTuiuSThHpLKQQ==\u003c/ds:X509Certificate\u003e\n        \u003c/ds:X509Data\u003e\n      \u003c/ds:KeyInfo\u003e\n    \u003c/md:KeyDescriptor\u003e\n    \u003cmd:NameIDFormat\u003eurn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\u003c/md:NameIDFormat\u003e\n    \u003cmd:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://mocksaml.com/api/saml/sso\"/\u003e\n    \u003cmd:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://mocksaml.com/api/saml/sso\"/\u003e\n  \u003c/md:IDPSSODescriptor\u003e\n\u003c/md:EntityDescriptor\u003e\n",
                  "name": "LDAP",
                  "with_signed_request": true
                }
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            binding: '(String) The binding, supported values: SAML_BINDING_UNSPECIFIED, SAML_BINDING_POST, SAML_BINDING_REDIRECT, SAML_BINDING_ARTIFACT'
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            metadata_xml: (String) The metadata XML as plain string
            name: (String) Name of the IDP
            with_signed_request: (Boolean) Whether the SAML IDP requires signed requests
        importStatements: []
    zitadel_init_message_text:
        subCategory: ""
        name: zitadel_init_message_text
        title: zitadel_init_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_instance_member:
        subCategory: ""
        description: Resource representing the membership of a user on an instance, defined with the given role.
        name: zitadel_instance_member
        title: zitadel_instance_member Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "roles": [
                    "IAM_OWNER"
                  ],
                  "user_id": "${data.zitadel_human_user.default.id}"
                }
              references:
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            roles: '(Set of String) List of roles granted, full list available here: https://zitadel.com/docs/guides/manage/console/managers#roles'
            user_id: (String) ID of the user
        importStatements: []
    zitadel_label_policy:
        subCategory: ""
        description: Resource representing the custom label policy of an organization.
        name: zitadel_label_policy
        title: zitadel_label_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "background_color": "#fafafa",
                  "background_color_dark": "#111827",
                  "disable_watermark": false,
                  "font_color": "#000000",
                  "font_color_dark": "#ffffff",
                  "font_hash": "${filemd5(\"/path/to/font.tff\")}",
                  "font_path": "/path/to/font.tff",
                  "hide_login_name_suffix": true,
                  "icon_dark_hash": "${filemd5(\"/path/to/icon_dark.jpg\")}",
                  "icon_dark_path": "/path/to/icon_dark.jpg",
                  "icon_hash": "${filemd5(\"/path/to/icon.jpg\")}",
                  "icon_path": "/path/to/icon.jpg",
                  "logo_dark_hash": "${filemd5(\"/path/to/logo_dark.jpg\")}",
                  "logo_dark_path": "/path/to/logo_dark.jpg",
                  "logo_hash": "${filemd5(\"/path/to/logo.jpg\")}",
                  "logo_path": "/path/to/logo.jpg",
                  "org_id": "${data.zitadel_org.default.id}",
                  "primary_color": "#5469d4",
                  "primary_color_dark": "#a5b4fc",
                  "set_active": true,
                  "theme_mode": "THEME_MODE_DARK",
                  "warn_color": "#cd3d56",
                  "warn_color_dark": "#ff3b5b"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            background_color: (String) hex value for background color
            background_color_dark: (String) hex value for background color dark theme
            disable_watermark: (Boolean) disable watermark
            font_color: (String) hex value for font color
            font_color_dark: (String) hex value for font color dark theme
            font_hash: (String)
            font_path: (String)
            font_url: (String)
            hide_login_name_suffix: (Boolean) hides the org suffix on the login form if the scope "urn:zitadel:iam:org:domain:primary:{domainname}" is set. Details about this scope in https://zitadel.com/docs/apis/openidoauth/scopes#reserved-scopes
            icon_dark_hash: (String)
            icon_dark_path: (String)
            icon_hash: (String)
            icon_path: (String)
            icon_url: (String)
            icon_url_dark: (String)
            id: (String) The ID of this resource.
            logo_dark_hash: (String)
            logo_dark_path: (String)
            logo_hash: (String)
            logo_path: (String)
            logo_url: (String)
            logo_url_dark: (String)
            org_id: (String) ID of the organization
            primary_color: (String) hex value for primary color
            primary_color_dark: (String) hex value for primary color dark theme
            set_active: (Boolean) set the label policy active after creating/updating
            theme_mode: '(String) theme mode, supported values: THEME_MODE_UNSPECIFIED, THEME_MODE_AUTO, THEME_MODE_DARK, THEME_MODE_LIGHT'
            warn_color: (String) hex value for warn color
            warn_color_dark: (String) hex value for warn color dark theme
        importStatements: []
    zitadel_lockout_policy:
        subCategory: ""
        description: Resource representing the custom lockout policy of an organization.
        name: zitadel_lockout_policy
        title: zitadel_lockout_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "max_password_attempts": "5",
                  "org_id": "${data.zitadel_org.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            max_password_attempts: (Number) Maximum password check attempts before the account gets locked. Attempts are reset as soon as the password is entered correct or the password is reset.
            org_id: (String) ID of the organization
        importStatements: []
    zitadel_login_policy:
        subCategory: ""
        description: Resource representing the custom login policy of an organization.
        name: zitadel_login_policy
        title: zitadel_login_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "allow_domain_discovery": true,
                  "allow_external_idp": true,
                  "allow_register": true,
                  "default_redirect_uri": "localhost:8080",
                  "disable_login_with_email": true,
                  "disable_login_with_phone": true,
                  "external_login_check_lifetime": "240h0m0s",
                  "force_mfa": false,
                  "force_mfa_local_only": false,
                  "hide_password_reset": "false",
                  "idps": [
                    "${data.zitadel_idp_google.default.id}",
                    "${data.zitadel_idp_azure_ad.default.id}"
                  ],
                  "ignore_unknown_usernames": true,
                  "mfa_init_skip_lifetime": "720h0m0s",
                  "multi_factor_check_lifetime": "24h0m0s",
                  "multi_factors": [
                    "MULTI_FACTOR_TYPE_U2F_WITH_VERIFICATION"
                  ],
                  "org_id": "${data.zitadel_org.default.id}",
                  "password_check_lifetime": "240h0m0s",
                  "passwordless_type": "PASSWORDLESS_TYPE_ALLOWED",
                  "second_factor_check_lifetime": "24h0m0s",
                  "second_factors": [
                    "SECOND_FACTOR_TYPE_OTP",
                    "SECOND_FACTOR_TYPE_U2F"
                  ],
                  "user_login": true
                }
              references:
                idps: data.zitadel_idp_google.default.id
                org_id: data.zitadel_org.default.id
        argumentDocs:
            allow_domain_discovery: (Boolean) if set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organisation on success.
            allow_external_idp: (Boolean) defines if a user is allowed to add a defined identity provider. E.g. Google auth
            allow_register: (Boolean) defines if a person is allowed to register a user on this organisation
            default_redirect_uri: (String) defines where the user will be redirected to if the login is started without app context (e.g. from mail)
            disable_login_with_email: (Boolean) defines if user can additionally (to the loginname) be identified by their verified email address
            disable_login_with_phone: (Boolean) defines if user can additionally (to the loginname) be identified by their verified phone number
            external_login_check_lifetime: (String)
            force_mfa: (Boolean) defines if a user MUST use a multi factor to log in
            force_mfa_local_only: (Boolean) if activated, ZITADEL only enforces MFA on local authentications. On authentications through MFA, ZITADEL won't prompt for MFA.
            hide_password_reset: (Boolean) defines if password reset link should be shown in the login screen
            id: (String) The ID of this resource.
            idps: (Set of String) allowed idps to login or register
            ignore_unknown_usernames: (Boolean) defines if unknown username on login screen directly return an error or always display the password screen
            mfa_init_skip_lifetime: (String)
            multi_factor_check_lifetime: (String)
            multi_factors: (Set of String) allowed multi factors
            org_id: (String) ID of the organization
            password_check_lifetime: (String)
            passwordless_type: (String) defines if passwordless is allowed for users
            second_factor_check_lifetime: (String)
            second_factors: (Set of String) allowed second factors
            user_login: (Boolean) defines if a user is allowed to login with his username and password
        importStatements: []
    zitadel_login_texts:
        subCategory: ""
        name: zitadel_login_texts
        title: zitadel_login_texts Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "email_verification_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "login_button_text": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "email_verification_text": {
                    "code_label": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "external_registration_user_overview_text": {
                    "back_button_text": "example",
                    "description": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "language_label": "example",
                    "lastname_label": "example",
                    "next_button_text": "example",
                    "nickname_label": "example",
                    "phone_label": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "external_user_not_found_text": {
                    "auto_register_button_text": "example",
                    "description": "example",
                    "link_button_text": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example"
                  },
                  "footer_text": {
                    "help": "example",
                    "privacy_policy": "example",
                    "tos": "example"
                  },
                  "init_mfa_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "init_mfa_otp_text": {
                    "cancel_button_text": "example",
                    "code_label": "example",
                    "description": "example",
                    "description_otp": "example",
                    "next_button_text": "example",
                    "secret_label": "example",
                    "title": "example"
                  },
                  "init_mfa_prompt_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "otp_option": "example",
                    "skip_button_text": "example",
                    "title": "example",
                    "u2f_option": "example"
                  },
                  "init_mfa_u2f_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "register_token_button_text": "example",
                    "title": "example",
                    "token_name_label": "example"
                  },
                  "init_password_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "init_password_text": {
                    "code_label": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "initialize_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "initialize_user_text": {
                    "code_label": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "resend_button_text": "example",
                    "title": "example"
                  },
                  "language": "en",
                  "linking_user_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "login_text": {
                    "description": "example",
                    "description_linking_process": "example",
                    "external_user_description": "example",
                    "login_name_label": "example",
                    "login_name_placeholder": "example",
                    "next_button_text": "example",
                    "register_button_text": "example",
                    "title": "example",
                    "title_linking_process": "example",
                    "user_must_be_member_of_org": "example",
                    "user_name_placeholder": "example"
                  },
                  "logout_text": {
                    "description": "example",
                    "login_button_text": "example",
                    "title": "example"
                  },
                  "mfa_providers_text": {
                    "choose_other": "example",
                    "otp": "example",
                    "u2f": "example"
                  },
                  "org_id": "${data.zitadel_org.default.id}",
                  "password_change_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "password_change_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "new_password_confirm_label": "example",
                    "new_password_label": "example",
                    "next_button_text": "example",
                    "old_password_label": "example",
                    "title": "example"
                  },
                  "password_reset_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "password_text": {
                    "back_button_text": "example",
                    "confirmation": "example",
                    "description": "example",
                    "has_lowercase": "example",
                    "has_number": "example",
                    "has_symbol": "example",
                    "has_uppercase": "example",
                    "min_length": "example",
                    "next_button_text": "example",
                    "password_label": "example",
                    "reset_link_text": "example",
                    "title": "example"
                  },
                  "passwordless_prompt_text": {
                    "description": "example",
                    "description_init": "example",
                    "next_button_text": "example",
                    "passwordless_button_text": "example",
                    "skip_button_text": "example",
                    "title": "example"
                  },
                  "passwordless_registration_done_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "description_close": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "passwordless_registration_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "register_token_button_text": "example",
                    "title": "example",
                    "token_name_label": "example"
                  },
                  "passwordless_text": {
                    "description": "example",
                    "error_retry": "example",
                    "login_with_pw_button_text": "example",
                    "not_supported": "example",
                    "title": "example",
                    "validate_token_button_text": "example"
                  },
                  "registration_option_text": {
                    "description": "example",
                    "external_login_description": "example",
                    "title": "example",
                    "user_name_button_text": "example"
                  },
                  "registration_org_text": {
                    "description": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "lastname_label": "example",
                    "orgname_label": "example",
                    "password_confirm_label": "example",
                    "password_label": "example",
                    "privacy_link_text": "example",
                    "save_button_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "registration_user_text": {
                    "back_button_text": "example",
                    "description": "example",
                    "description_org_register": "example",
                    "email_label": "example",
                    "firstname_label": "example",
                    "gender_label": "example",
                    "language_label": "example",
                    "lastname_label": "example",
                    "next_button_text": "example",
                    "password_confirm_label": "example",
                    "password_label": "example",
                    "privacy_link_text": "example",
                    "title": "example",
                    "tos_and_privacy_label": "example",
                    "tos_confirm": "example",
                    "tos_confirm_and": "example",
                    "tos_link_text": "example",
                    "username_label": "example"
                  },
                  "select_account_text": {
                    "description": "example",
                    "description_linking_process": "example",
                    "other_user": "example",
                    "session_state_active": "example",
                    "session_state_inactive": "example",
                    "title": "example",
                    "title_linking_process": "example",
                    "user_must_be_member_of_org": "example"
                  },
                  "success_login_text": {
                    "auto_redirect_description": "example",
                    "next_button_text": "example",
                    "redirected_description": "example",
                    "title": "example"
                  },
                  "username_change_done_text": {
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "username_change_text": {
                    "cancel_button_text": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example",
                    "username_label": "example"
                  },
                  "verify_mfa_otp_text": {
                    "code_label": "example",
                    "description": "example",
                    "next_button_text": "example",
                    "title": "example"
                  },
                  "verify_mfa_u2f_text": {
                    "description": "example",
                    "error_retry": "example",
                    "not_supported": "example",
                    "title": "example",
                    "validate_token_text": "example"
                  }
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_redirect_description: (String) Text to describe that auto-redirect should happen after successful login
            auto_register_button_text: (String)
            back_button_text: (String)
            cancel_button_text: (String)
            choose_other: (String)
            code_label: (String)
            confirmation: (String)
            description: (String)
            description_close: (String)
            description_init: (String)
            description_linking_process: (String)
            description_org_register: (String)
            description_otp: (String)
            email_label: (String)
            email_verification_done_text: (Attributes) (see below for nested schema)
            email_verification_text: (Attributes) (see below for nested schema)
            error_retry: (String)
            expired_description: (String)
            external_login_description: (String)
            external_registration_user_overview_text: (Attributes) (see below for nested schema)
            external_user_description: (String)
            external_user_not_found_text: (Attributes) (see below for nested schema)
            firstname_label: (String)
            footer_text: (Attributes) (see below for nested schema)
            gender_label: (String)
            has_lowercase: (String)
            has_number: (String)
            has_symbol: (String)
            has_uppercase: (String)
            help: (String)
            id: (String) The ID of this resource.
            init_mfa_done_text: (Attributes) (see below for nested schema)
            init_mfa_otp_text: (Attributes) (see below for nested schema)
            init_mfa_prompt_text: (Attributes) (see below for nested schema)
            init_mfa_u2f_text: (Attributes) (see below for nested schema)
            init_password_done_text: (Attributes) (see below for nested schema)
            init_password_text: (Attributes) (see below for nested schema)
            initialize_done_text: (Attributes) (see below for nested schema)
            initialize_user_text: (Attributes) (see below for nested schema)
            language: (String)
            language_label: (String)
            lastname_label: (String)
            link_button_text: (String)
            linking_user_done_text: (Attributes) (see below for nested schema)
            linking_user_prompt_text: (Attributes) (see below for nested schema)
            login_button_text: (String)
            login_name_label: (String)
            login_name_placeholder: (String)
            login_text: (Attributes) (see below for nested schema)
            login_with_pw_button_text: (String)
            logout_text: (Attributes) (see below for nested schema)
            mfa_providers_text: (Attributes) (see below for nested schema)
            min_length: (String)
            new_password_confirm_label: (String)
            new_password_label: (String)
            next_button_text: (String)
            nickname_label: (String)
            not_supported: (String)
            old_password_label: (String)
            org_id: (String)
            orgname_label: (String)
            other_button_text: (String)
            other_user: (String)
            otp: (String)
            otp_option: (String)
            password_change_done_text: (Attributes) (see below for nested schema)
            password_change_text: (Attributes) (see below for nested schema)
            password_confirm_label: (String)
            password_label: (String)
            password_reset_done_text: (Attributes) (see below for nested schema)
            password_text: (Attributes) (see below for nested schema)
            passwordless_button_text: (String)
            passwordless_prompt_text: (Attributes) (see below for nested schema)
            passwordless_registration_done_text: (Attributes) (see below for nested schema)
            passwordless_registration_text: (Attributes) (see below for nested schema)
            passwordless_text: (Attributes) (see below for nested schema)
            phone_label: (String)
            privacy_confirm: (String)
            privacy_link_text: (String)
            privacy_policy: (String)
            redirected_description: (String) Text to describe that the window can be closed after redirect
            register_button_text: (String)
            register_token_button_text: (String)
            registration_option_text: (Attributes) (see below for nested schema)
            registration_org_text: (Attributes) (see below for nested schema)
            registration_user_text: (Attributes) (see below for nested schema)
            resend_button_text: (String)
            reset_link_text: (String)
            save_button_text: (String)
            secret_label: (String)
            select_account_text: (Attributes) (see below for nested schema)
            session_state_active: (String)
            session_state_inactive: (String)
            skip_button_text: (String)
            success_login_text: (Attributes) (see below for nested schema)
            support_email: (String)
            title: (String)
            title_linking_process: (String)
            token_name_label: (String)
            tos: (String)
            tos_and_privacy_label: (String)
            tos_confirm: (String)
            tos_link_text: (String)
            u2f: (String)
            u2f_option: (String)
            user_must_be_member_of_org: (String)
            user_name_button_text: (String)
            user_name_placeholder: (String)
            username_change_done_text: (Attributes) (see below for nested schema)
            username_change_text: (Attributes) (see below for nested schema)
            username_label: (String)
            validate_token_button_text: (String)
            validate_token_text: (String)
            verify_mfa_otp_text: (Attributes) (see below for nested schema)
            verify_mfa_u2f_text: (Attributes) (see below for nested schema)
        importStatements: []
    zitadel_machine_key:
        subCategory: ""
        description: Resource representing a machine key
        name: zitadel_machine_key
        title: zitadel_machine_key Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "expiration_date": "2519-04-01T08:45:00Z",
                  "key_type": "KEY_TYPE_JSON",
                  "org_id": "${data.zitadel_org.default.id}",
                  "public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApj7JHjDLo2TwiJznwMrD\n97ybWoRegSK1rx37+i+Yrmhaee0GuOyj+hWG8/yKazAbZfYB0atO/zHxy1BtFNfX\nuYZS689TvfZVP6TctonH0VTlDDKOjmkGl472DhJvLvwjPXq1e55jS0kToK5lGRW6\nQrgm7m/KiF96Qmp5kUbF1sThVtKBW9GIAuzWEk3O9opftd/NH3BxvUToWLgG/GFx\nhLeOTrcuPibVHkHbIjt1VHaOD8rKAaRV+KBZUmyS9vdo629wfSx/ylUmwWZ6YUTj\nkhnqTi0s7j/oLGJNk+DSjMzkcgls0gzXAwPfiEnjEB+Xxw3LnR6k17HyYxqQs7kz\nZwIDAQAB\n-----END PUBLIC KEY-----\n",
                  "user_id": "${data.zitadel_machine_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                user_id: data.zitadel_machine_user.default.id
        argumentDocs:
            expiration_date: (String) Expiration date of the machine key in the RFC3339 format
            id: (String) The ID of this resource.
            key_details: (String, Sensitive) Value of the machine key
            key_type: '(String) Type of the machine key, supported values: KEY_TYPE_UNSPECIFIED, KEY_TYPE_JSON'
            org_id: (String) ID of the organization
            public_key: (String) Optionally provide a public key of your own generated RSA private key
            user_id: (String) ID of the user
        importStatements: []
    zitadel_machine_user:
        subCategory: ""
        description: Resource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        name: zitadel_machine_user
        title: zitadel_machine_user Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "description": "a machine user",
                  "name": "name",
                  "org_id": "${data.zitadel_org.default.id}",
                  "user_name": "machine@example.com",
                  "with_secret": false
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            access_token_type: '(String) Access token type, supported values: ACCESS_TOKEN_TYPE_BEARER, ACCESS_TOKEN_TYPE_JWT'
            client_id: (String, Sensitive) Value of the client ID if withSecret is true
            client_secret: (String, Sensitive) Value of the client secret if withSecret is true
            description: (String) Description of the user
            id: (String) The ID of this resource.
            login_names: (List of String) Loginnames
            name: (String) Name of the machine user
            org_id: (String) ID of the organization
            preferred_login_name: (String) Preferred login name
            state: (String) State of the user
            user_name: (String) Username
            with_secret: (Boolean) Generate machine secret, only applicable if creation or change from false
        importStatements: []
    zitadel_notification_policy:
        subCategory: ""
        description: Resource representing the custom notification policy of an organization.
        name: zitadel_notification_policy
        title: zitadel_notification_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "org_id": "${data.zitadel_org.default.id}",
                  "password_change": false
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            password_change: (Boolean) Send notification if a user changes his password
        importStatements: []
    zitadel_org:
        subCategory: ""
        description: Resource representing an organization in ZITADEL, which is the highest level after the instance and contains several other resource including policies if the configuration differs to the default policies on the instance.
        name: zitadel_org
        title: zitadel_org Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "name": "terraform-test"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            is_default: (Boolean) True sets the org as default org for the instance. Only one org can be default org. Nothing happens if you set it to false until you set another org as default org.
            name: (String) Name of the org
            primary_domain: (String) Primary domain of the org
            state: (String) State of the org
        importStatements: []
    zitadel_org_idp_azure_ad:
        subCategory: ""
        description: Resource representing an Azure AD IdP on the organization.
        name: zitadel_org_idp_azure_ad
        title: zitadel_org_idp_azure_ad Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "9065bfc8-a08a...",
                  "client_secret": "H2n***",
                  "email_verified": true,
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "Azure AD",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email",
                    "User.Read"
                  ],
                  "tenant_type": "AZURE_AD_TENANT_TYPE_ORGANISATIONS"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            email_verified: (Boolean) automatically mark emails as verified
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            tenant_id: (String) if tenant_id is not set, the tenant_type is used
            tenant_type: (String) the azure ad tenant type
        importStatements: []
    zitadel_org_idp_github:
        subCategory: ""
        description: Resource representing a GitHub IdP on the organization.
        name: zitadel_org_idp_github
        title: zitadel_org_idp_github Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "86a165...",
                  "client_secret": "*****afdbac18",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitHub",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_org_idp_github_es:
        subCategory: ""
        description: Resource representing a GitHub Enterprise IdP on the organization.
        name: zitadel_org_idp_github_es
        title: zitadel_org_idp_github_es Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "authorization_endpoint": "https://auth.endpoint",
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "86a165...",
                  "client_secret": "*****afdbac18",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitHub Enterprise Server",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ],
                  "token_endpoint": "https://token.endpoint",
                  "user_endpoint": "https://user.endpoint"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            authorization_endpoint: (String) the providers authorization endpoint
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            token_endpoint: (String) the providers token endpoint
            user_endpoint: (String) the providers user endpoint
        importStatements: []
    zitadel_org_idp_gitlab:
        subCategory: ""
        description: Resource representing a GitLab IdP on the organization.
        name: zitadel_org_idp_gitlab
        title: zitadel_org_idp_gitlab Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitLab",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_org_idp_gitlab_self_hosted:
        subCategory: ""
        description: Resource representing a GitLab Self Hosted IdP on the organization.
        name: zitadel_org_idp_gitlab_self_hosted
        title: zitadel_org_idp_gitlab_self_hosted Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "issuer": "https://my.issuer",
                  "name": "GitLab Self Hosted",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            issuer: (String) the providers issuer
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_org_idp_google:
        subCategory: ""
        description: Resource representing a Google IdP on the organization.
        name: zitadel_org_idp_google
        title: zitadel_org_idp_google Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "182902...",
                  "client_secret": "GOCSPX-*****",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "Google",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_org_idp_jwt:
        subCategory: ""
        description: Resource representing a generic JWT IdP of the organization.
        name: zitadel_org_idp_jwt
        title: zitadel_org_idp_jwt Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_register": false,
                  "header_name": "x-auth-token",
                  "issuer": "https://google.com",
                  "jwt_endpoint": "https://jwtendpoint.com/jwt",
                  "keys_endpoint": "https://jwtendpoint.com/keys",
                  "name": "jwtidp",
                  "org_id": "${data.zitadel_org.default.id}",
                  "styling_type": "STYLING_TYPE_UNSPECIFIED"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_register: (Boolean) auto register for users from this idp
            header_name: (String) the name of the header where the JWT is sent in, default is authorization
            id: (String) The ID of this resource.
            issuer: (String) the issuer of the jwt (for validation)
            jwt_endpoint: (String) the endpoint where the jwt can be extracted
            keys_endpoint: (String) the endpoint to the key (JWK) which are used to sign the JWT with
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            styling_type: '(String) Some identity providers specify the styling of the button to their login, supported values: STYLING_TYPE_UNSPECIFIED, STYLING_TYPE_GOOGLE'
        importStatements: []
    zitadel_org_idp_ldap:
        subCategory: ""
        description: Resource representing an LDAP IdP on the organization.
        name: zitadel_org_idp_ldap
        title: zitadel_org_idp_ldap Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "base_dn": "dc=example,dc=com",
                  "bind_dn": "cn=admin,dc=example,dc=com",
                  "bind_password": "Password1!",
                  "first_name_attribute": "firstname",
                  "id_attribute": "uid",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "last_name_attribute": "lastname",
                  "name": "LDAP",
                  "org_id": "${data.zitadel_org.default.id}",
                  "servers": [
                    "ldaps://my.primary.server:389",
                    "ldaps://my.secondary.server:389"
                  ],
                  "start_tls": false,
                  "timeout": "10s",
                  "user_base": "dn",
                  "user_filters": [
                    "uid",
                    "email"
                  ],
                  "user_object_classes": [
                    "inetOrgPerson"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            avatar_url_attribute: (String) User attribute for the avatar url
            base_dn: (String) Base DN for LDAP connections
            bind_dn: (String) Bind DN for LDAP connections
            bind_password: (String, Sensitive) Bind password for LDAP connections
            display_name_attribute: (String) User attribute for the display name
            email_attribute: (String) User attribute for the email
            email_verified_attribute: (String) User attribute for the email verified state
            first_name_attribute: (String) User attribute for the first name
            id: (String) The ID of this resource.
            id_attribute: (String) User attribute for the id
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            last_name_attribute: (String) User attribute for the last name
            name: (String) Name of the IDP
            nick_name_attribute: (String) User attribute for the nick name
            org_id: (String) ID of the organization
            phone_attribute: (String) User attribute for the phone
            phone_verified_attribute: (String) User attribute for the phone verified state
            preferred_language_attribute: (String) User attribute for the preferred language
            preferred_username_attribute: (String) User attribute for the preferred username
            profile_attribute: (String) User attribute for the profile
            servers: (List of String) Servers to try in order for establishing LDAP connections
            start_tls: (Boolean) Wether to use StartTLS for LDAP connections
            timeout: (String) Timeout for LDAP connections
            user_base: (String) User base for LDAP connections
            user_filters: (Set of String) User filters for LDAP connections
            user_object_classes: (Set of String) User object classes for LDAP connections
        importStatements: []
    zitadel_org_idp_oauth:
        subCategory: ""
        description: Resource representing a generic OAuth2 IDP on the organization.
        name: zitadel_org_idp_oauth
        title: zitadel_org_idp_oauth Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "authorization_endpoint": "https://accounts.google.com/o/oauth2/v2/auth",
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "15765e...",
                  "client_secret": "*****abcxyz",
                  "id_attribute": "user_id",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "name": "GitLab",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ],
                  "token_endpoint": "https://oauth2.googleapis.com/token",
                  "user_endpoint": "https://openidconnect.googleapis.com/v1/userinfo"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            authorization_endpoint: (String) The authorization endpoint
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            id_attribute: (String) The id attribute
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
            token_endpoint: (String) The token endpoint
            user_endpoint: (String) The user endpoint
        importStatements: []
    zitadel_org_idp_oidc:
        subCategory: ""
        description: Resource representing a generic OIDC IdP on the organization.
        name: zitadel_org_idp_oidc
        title: zitadel_org_idp_oidc Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "client_id": "a_client_id",
                  "client_secret": "a_client_secret",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_id_token_mapping": true,
                  "is_linking_allowed": false,
                  "issuer": "https://example.com",
                  "name": "My Generic OIDC IDP",
                  "org_id": "${data.zitadel_org.default.id}",
                  "scopes": [
                    "openid",
                    "profile",
                    "email"
                  ]
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            client_id: (String) client id generated by the identity provider
            client_secret: (String, Sensitive) client secret generated by the identity provider
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_id_token_mapping: (Boolean) if true, provider information get mapped from the id token, not from the userinfo endpoint
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            issuer: (String) the issuer of the idp
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            scopes: (Set of String) the scopes requested by ZITADEL during the request on the identity provider
        importStatements: []
    zitadel_org_idp_saml:
        subCategory: ""
        description: Resource representing a SAML IdP on the organization.
        name: zitadel_org_idp_saml
        title: zitadel_org_idp_saml Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "auto_linking": "AUTO_LINKING_OPTION_USERNAME",
                  "binding": "SAML_BINDING_POST",
                  "is_auto_creation": false,
                  "is_auto_update": true,
                  "is_creation_allowed": true,
                  "is_linking_allowed": false,
                  "metadata_xml": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?\u003e\n\u003cmd:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://saml.example.com/entityid\" validUntil=\"2034-05-15T14:21:58.979Z\"\u003e\n  \u003cmd:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\u003e\n    \u003cmd:KeyDescriptor use=\"signing\"\u003e\n      \u003cds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"\u003e\n        \u003cds:X509Data\u003e\n          \u003cds:X509Certificate\u003eMIIC4jCCAcoCCQC33wnybT5QZDANBgkqhkiG9w0BAQsFADAyMQswCQYDVQQGEwJV\nSzEPMA0GA1UECgwGQm94eUhRMRIwEAYDVQQDDAlNb2NrIFNBTUwwIBcNMjIwMjI4\nMjE0NjM4WhgPMzAyMTA3MDEyMTQ2MzhaMDIxCzAJBgNVBAYTAlVLMQ8wDQYDVQQK\nDAZCb3h5SFExEjAQBgNVBAMMCU1vY2sgU0FNTDCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBALGfYettMsct1T6tVUwTudNJH5Pnb9GGnkXi9Zw/e6x45DD0\nRuRONbFlJ2T4RjAE/uG+AjXxXQ8o2SZfb9+GgmCHuTJFNgHoZ1nFVXCmb/Hg8Hpd\n4vOAGXndixaReOiq3EH5XvpMjMkJ3+8+9VYMzMZOjkgQtAqO36eAFFfNKX7dTj3V\npwLkvz6/KFCq8OAwY+AUi4eZm5J57D31GzjHwfjH9WTeX0MyndmnNB1qV75qQR3b\n2/W5sGHRv+9AarggJkF+ptUkXoLtVA51wcfYm6hILptpde5FQC8RWY1YrswBWAEZ\nNfyrR4JeSweElNHg4NVOs4TwGjOPwWGqzTfgTlECAwEAATANBgkqhkiG9w0BAQsF\nAAOCAQEAAYRlYflSXAWoZpFfwNiCQVE5d9zZ0DPzNdWhAybXcTyMf0z5mDf6FWBW\n5Gyoi9u3EMEDnzLcJNkwJAAc39Apa4I2/tml+Jy29dk8bTyX6m93ngmCgdLh5Za4\nkhuU3AM3L63g7VexCuO7kwkjh/+LqdcIXsVGO6XDfu2QOs1Xpe9zIzLpwm/RNYeX\nUjbSj5ce/jekpAw7qyVVL4xOyh8AtUW1ek3wIw1MJvEgEPt0d16oshWJpoS1OT8L\nr/22SvYEo3EmSGdTVGgk3x3s+A0qWAqTcyjr7Q4s/GKYRFfomGwz0TZ4Iw1ZN99M\nm0eo2USlSRTVl7QHRTuiuSThHpLKQQ==\u003c/ds:X509Certificate\u003e\n        \u003c/ds:X509Data\u003e\n      \u003c/ds:KeyInfo\u003e\n    \u003c/md:KeyDescriptor\u003e\n    \u003cmd:NameIDFormat\u003eurn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\u003c/md:NameIDFormat\u003e\n    \u003cmd:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://mocksaml.com/api/saml/sso\"/\u003e\n    \u003cmd:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://mocksaml.com/api/saml/sso\"/\u003e\n  \u003c/md:IDPSSODescriptor\u003e\n\u003c/md:EntityDescriptor\u003e\n",
                  "name": "LDAP",
                  "org_id": "${data.zitadel_org.default.id}",
                  "with_signed_request": true
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            auto_linking: '(String) Enable if users should get prompted to link an existing ZITADEL user to an external account if the selected attribute matches, supported values: AUTO_LINKING_OPTION_UNSPECIFIED, AUTO_LINKING_OPTION_USERNAME, AUTO_LINKING_OPTION_EMAIL'
            binding: '(String) The binding, supported values: SAML_BINDING_UNSPECIFIED, SAML_BINDING_POST, SAML_BINDING_REDIRECT, SAML_BINDING_ARTIFACT'
            id: (String) The ID of this resource.
            is_auto_creation: (Boolean) enable if a new account in ZITADEL should be created automatically on login with an external account
            is_auto_update: (Boolean) enable if a the ZITADEL account fields should be updated automatically on each login
            is_creation_allowed: (Boolean) enable if users should be able to create a new account in ZITADEL when using an external account
            is_linking_allowed: (Boolean) enable if users should be able to link an existing ZITADEL user with an external account
            metadata_xml: (String) The metadata XML as plain string
            name: (String) Name of the IDP
            org_id: (String) ID of the organization
            with_signed_request: (Boolean) Whether the SAML IDP requires signed requests
        importStatements: []
    zitadel_org_member:
        subCategory: ""
        description: Resource representing the membership of a user on an organization, defined with the given role.
        name: zitadel_org_member
        title: zitadel_org_member Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "org_id": "${data.zitadel_org.default.id}",
                  "roles": [
                    "ORG_OWNER"
                  ],
                  "user_id": "${data.zitadel_human_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            roles: (Set of String) List of roles granted
            user_id: (String) ID of the user
        importStatements: []
    zitadel_org_metadata:
        subCategory: ""
        description: Add a custom attribute to the organization like its location or an identifier in another system. You can use this information in your actions. This Terraform resource manages a single key-value pair.
        name: zitadel_org_metadata
        title: zitadel_org_metadata Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "key": "a_key",
                  "org_id": "${data.zitadel_org.default.id}",
                  "value": "a_value"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            key: (String) The key of a metadata entry
            org_id: (String) ID of the organization
            value: (String) The string representation of a metadata entry value. For binary data, use the base64encode function.
        importStatements: []
    zitadel_password_change_message_text:
        subCategory: ""
        name: zitadel_password_change_message_text
        title: zitadel_password_change_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_password_complexity_policy:
        subCategory: ""
        description: Resource representing the custom password complexity policy of an organization.
        name: zitadel_password_complexity_policy
        title: zitadel_password_complexity_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "has_lowercase": true,
                  "has_number": true,
                  "has_symbol": true,
                  "has_uppercase": true,
                  "min_length": "8",
                  "org_id": "${data.zitadel_org.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            has_lowercase: (Boolean) defines if the password MUST contain a lower case letter
            has_number: (Boolean) defines if the password MUST contain a number
            has_symbol: (Boolean) defines if the password MUST contain a symbol. E.g. "$"
            has_uppercase: (Boolean) defines if the password MUST contain an upper case letter
            id: (String) The ID of this resource.
            min_length: (Number) Minimal length for the password
            org_id: (String) ID of the organization
        importStatements: []
    zitadel_password_reset_message_text:
        subCategory: ""
        name: zitadel_password_reset_message_text
        title: zitadel_password_reset_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_passwordless_registration_message_text:
        subCategory: ""
        name: zitadel_passwordless_registration_message_text
        title: zitadel_passwordless_registration_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_personal_access_token:
        subCategory: ""
        description: Resource representing a personal access token of a user
        name: zitadel_personal_access_token
        title: zitadel_personal_access_token Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "expiration_date": "2519-04-01T08:45:00Z",
                  "org_id": "${data.zitadel_org.default.id}",
                  "user_id": "${data.zitadel_machine_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                user_id: data.zitadel_machine_user.default.id
        argumentDocs:
            expiration_date: (String) Expiration date of the token in the RFC3339 format
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            token: (String, Sensitive) Value of the token
            user_id: (String) ID of the user
        importStatements: []
    zitadel_privacy_policy:
        subCategory: ""
        description: Resource representing the custom privacy policy of an organization.
        name: zitadel_privacy_policy
        title: zitadel_privacy_policy Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "help_link": "https://example.com/help",
                  "org_id": "${data.zitadel_org.default.id}",
                  "privacy_link": "https://example.com/privacy",
                  "support_email": "support@example.com",
                  "tos_link": "https://example.com/tos"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            help_link: (String)
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            privacy_link: (String)
            support_email: (String)
            tos_link: (String)
        importStatements: []
    zitadel_project:
        subCategory: ""
        description: Resource representing the project, which can then be granted to different organizations or users directly, containing different applications.
        name: zitadel_project
        title: zitadel_project Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "has_project_check": true,
                  "name": "projectname",
                  "org_id": "${data.zitadel_org.default.id}",
                  "private_labeling_setting": "PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY",
                  "project_role_assertion": true,
                  "project_role_check": true
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            has_project_check: (Boolean) ZITADEL checks if the org of the user has permission to this project
            id: (String) The ID of this resource.
            name: (String) Name of the project
            org_id: (String) ID of the organization
            private_labeling_setting: '(String) Defines from where the private labeling should be triggered, supported values: PRIVATE_LABELING_SETTING_UNSPECIFIED, PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY, PRIVATE_LABELING_SETTING_ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY'
            project_role_assertion: (Boolean) describes if roles of user should be added in token
            project_role_check: (Boolean) ZITADEL checks if the user has at least one on this project
            state: (String) State of the project
        importStatements: []
    zitadel_project_grant:
        subCategory: ""
        description: Resource representing the grant of a project to a different organization, also containing the available roles which can be given to the members of the projectgrant.
        name: zitadel_project_grant
        title: zitadel_project_grant Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "granted_org_id": "${data.zitadel_org.granted_org.id}",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}",
                  "role_keys": [
                    "super-user"
                  ]
                }
              references:
                granted_org_id: data.zitadel_org.granted_org.id
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            granted_org_id: (String) ID of the organization granted the project
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
            role_keys: (Set of String) List of roles granted
        importStatements: []
    zitadel_project_grant_member:
        subCategory: ""
        description: Resource representing the membership of a user on an granted project, defined with the given role.
        name: zitadel_project_grant_member
        title: zitadel_project_grant_member Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "grant_id": "123456789012345678",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}",
                  "roles": [
                    "PROJECT_GRANT_OWNER"
                  ],
                  "user_id": "${data.zitadel_human_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            grant_id: (String) ID of the grant
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
            roles: (Set of String) List of roles granted
            user_id: (String) ID of the user
        importStatements: []
    zitadel_project_member:
        subCategory: ""
        description: Resource representing the membership of a user on an project, defined with the given role.
        name: zitadel_project_member
        title: zitadel_project_member Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}",
                  "roles": [
                    "PROJECT_OWNER"
                  ],
                  "user_id": "${data.zitadel_human_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
            roles: (Set of String) List of roles granted
            user_id: (String) ID of the user
        importStatements: []
    zitadel_project_role:
        subCategory: ""
        description: Resource representing the project roles, which can be given as authorizations to users.
        name: zitadel_project_role
        title: zitadel_project_role Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "display_name": "display_name2",
                  "group": "role_group",
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}",
                  "role_key": "super-user"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
        argumentDocs:
            display_name: (String) Name used for project role
            group: (String) Group used for project role
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            project_id: (String) ID of the project
            role_key: (String) Key used for project role
        importStatements: []
    zitadel_sms_provider_twilio:
        subCategory: ""
        description: Resource representing the SMS provider Twilio configuration of an instance.
        name: zitadel_sms_provider_twilio
        title: zitadel_sms_provider_twilio Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "sender_number": "019920892",
                  "sid": "sid",
                  "token": "twilio_token"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            sender_number: (String) Sender number which is used to send the SMS.
            sid: (String) SID used to communicate with Twilio.
            token: (String, Sensitive) Token used to communicate with Twilio.
        importStatements: []
    zitadel_smtp_config:
        subCategory: ""
        description: Resource representing the SMTP configuration of an instance.
        name: zitadel_smtp_config
        title: zitadel_smtp_config Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "host": "localhost:25",
                  "password": "secret_password",
                  "reply_to_address": "replyto@example.com",
                  "sender_address": "sender@example.com",
                  "sender_name": "no-reply",
                  "tls": true,
                  "user": "user"
                }
        argumentDocs:
            host: (String) Host and port address to your SMTP server.
            id: (String) The ID of this resource.
            password: (String, Sensitive) Password used to communicate with your SMTP server.
            reply_to_address: (String) Address to reply to.
            sender_address: (String) Address used to send emails.
            sender_name: (String) Sender name used to send emails.
            set_active: (Boolean) Set the SMTP configuration active after creating/updating
            tls: (Boolean) TLS used to communicate with your SMTP server.
            user: (String) User used to communicate with your SMTP server.
        importStatements: []
    zitadel_trigger_actions:
        subCategory: ""
        description: Resource representing triggers, when actions get started
        name: zitadel_trigger_actions
        title: zitadel_trigger_actions Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "action_ids": [
                    "${data.zitadel_action.default.id}"
                  ],
                  "flow_type": "FLOW_TYPE_CUSTOMISE_TOKEN",
                  "org_id": "${data.zitadel_org.default.id}",
                  "trigger_type": "TRIGGER_TYPE_PRE_ACCESS_TOKEN_CREATION"
                }
              references:
                action_ids: data.zitadel_action.default.id
                org_id: data.zitadel_org.default.id
        argumentDocs:
            action_ids: (Set of String) IDs of the triggered actions
            flow_type: '(String) Type of the flow to which the action triggers belong, supported values: FLOW_TYPE_EXTERNAL_AUTHENTICATION, FLOW_TYPE_CUSTOMISE_TOKEN, FLOW_TYPE_INTERNAL_AUTHENTICATION, FLOW_TYPE_SAML_RESPONSE'
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            trigger_type: '(String) Trigger type on when the actions get triggered, supported values: TRIGGER_TYPE_POST_AUTHENTICATION, TRIGGER_TYPE_PRE_CREATION, TRIGGER_TYPE_POST_CREATION, TRIGGER_TYPE_PRE_USERINFO_CREATION, TRIGGER_TYPE_PRE_ACCESS_TOKEN_CREATION, TRIGGER_TYPE_PRE_SAML_RESPONSE_CREATION'
        importStatements: []
    zitadel_user_grant:
        subCategory: ""
        description: Resource representing the authorization given to a user directly, including the given roles.
        name: zitadel_user_grant
        title: zitadel_user_grant Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "org_id": "${data.zitadel_org.default.id}",
                  "project_id": "${data.zitadel_project.default.id}",
                  "role_keys": [
                    "super-user"
                  ],
                  "user_id": "${data.zitadel_human_user.default.id}"
                }
              references:
                org_id: data.zitadel_org.default.id
                project_id: data.zitadel_project.default.id
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            org_id: (String) ID of the organization
            project_grant_id: (String) ID of the granted project
            project_id: (String) ID of the project
            role_keys: (Set of String) List of roles granted
            user_id: (String) ID of the user
        importStatements: []
    zitadel_user_metadata:
        subCategory: ""
        description: Add a custom attribute to the user like the authenticating system. You can use this information in your actions. This Terraform resource manages a single key-value pair.
        name: zitadel_user_metadata
        title: zitadel_user_metadata Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "key": "a_key",
                  "org_id": "${data.zitadel_org.default.id}",
                  "user_id": "${data.zitadel_human_user.default.id}",
                  "value": "a_value"
                }
              references:
                org_id: data.zitadel_org.default.id
                user_id: data.zitadel_human_user.default.id
        argumentDocs:
            id: (String) The ID of this resource.
            key: (String) The key of a metadata entry
            org_id: (String) ID of the organization
            user_id: (String) ID of the user
            value: (String) The string representation of a metadata entry value. For binary data, use the base64encode function.
        importStatements: []
    zitadel_verify_email_message_text:
        subCategory: ""
        name: zitadel_verify_email_message_text
        title: zitadel_verify_email_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_verify_email_otp_message_text:
        subCategory: ""
        name: zitadel_verify_email_otp_message_text
        title: zitadel_verify_email_otp_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "button_text": "button_text example",
                  "footer_text": "footer_text example",
                  "greeting": "greeting example",
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "pre_header": "pre_header example",
                  "subject": "subject example",
                  "text": "text example",
                  "title": "title example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_verify_phone_message_text:
        subCategory: ""
        name: zitadel_verify_phone_message_text
        title: zitadel_verify_phone_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "text": "text example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
    zitadel_verify_sms_otp_message_text:
        subCategory: ""
        name: zitadel_verify_sms_otp_message_text
        title: zitadel_verify_sms_otp_message_text Resource - terraform-provider-zitadel
        examples:
            - name: default
              manifest: |-
                {
                  "language": "en",
                  "org_id": "${data.zitadel_org.default.id}",
                  "text": "text example"
                }
              references:
                org_id: data.zitadel_org.default.id
        argumentDocs:
            button_text: (String)
            footer_text: (String)
            greeting: (String)
            id: (String) The ID of this resource.
            language: (String)
            org_id: (String)
            pre_header: (String)
            subject: (String)
            text: (String)
            title: (String)
        importStatements: []
